#This bot trap will catch all bots accessing the folder:
#/_private_
#This is a hidden url, so, in order to make this work, you need
#to add the following to your robots.txt file:
#User-agent: *
#Disallow: /_private_

#I'm also blocking typical vulnerability exploids like trying to access
#protected operating system files or folders, ie: /etc/ or passwd

#Make sure to include this file after your CustomLog directive; otherwise the
#request of the blocked host won't be registered into the apache's log file

#In order to use this, you have to include the file evil_host_trap_env.conf
#either in your global apache .conf file or put it in the configuration files
#folder, ie:
#/etc/apache2/conf-enabled -> In devian/ubuntu like distros
#/etc/httpd/conf.d	   -> In RedHad/CentOS like distros

#I opted to linking it into the configuration folder, ie:
#cd /etc/apache2/conf-enabled
#ln -s /usr/local/apache_evil_host_trap/evil_host_trap_env.conf .

#This file sets an environment variable: EVIL_HOST_PATH, which will be used to
#indicate the location of the evil host trap configuration files. This variable
#will be used in the Include directives (continue reading).

#Then add the following includes in your VirtualHost:
#This file - initializes the RewriteMap and blocksalready logged hosts)
#Include ${EVIL_HOST_PATH}/evil_host_trap_init.conf 

#Either include:
#Blocking rules wp folders in non-wp sites
#Include ${EVIL_HOST_PATH}/evil_host_trap_no_wp.conf

#or
#Blocking rules to common wp vulnerabilities
#Include ${EVIL_HOST_PATH}/evil_host_trap_wp.conf
#
# Do not include both. Afterwards, include:
#Registers the catched bad hosts
#Include ${EVIL_HOST_PATH}/evil_host_trap_register.conf
#
# See VirtualHost_sample.conf for an example

#Only for debugging
#Old apache 2.2
#RewriteLogLevel 9
#RewriteLog "/var/log/httpd/rewrite_log"
#New apache 2.4
#LogLevel alert rewrite:trace3

#This directive will block the bots logged into blacklisted_hosts.txt
#when they try to access the website again. Here you have to change the
#path of the RewriteMap according to your configuration
RewriteMap blacklist_map "txt:${EVIL_HOST_PATH}/blacklisted_hosts.txt"
RewriteCond ${blacklist_map:%{REMOTE_ADDR}} deny [NC]
RewriteRule ^ - [L,F]

#If it is not whitelisted it should continue the check
RewriteCond ${blacklist_map:%{REMOTE_ADDR}} !allow [NC]

#Conditions for all websites
#Note: the last [OR] is needed to concatenate this conditions with the
#ones in the other files
RewriteCond %{REQUEST_URI} ^(.*)/_private_(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)/etc/(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)/passwd(.*)$ [NC,OR]

#Multiple scannings in some cms/web services I don't use
#If you use some of them, ie: joomla, phpmyadmin, etc., then you will nedd to
#delete them from here
RewriteCond %{REQUEST_URI} ^(.*)jenkins(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)jmx-console(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)joomla(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)dumper(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)myadmin(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)xampp(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)typo3(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)webadmin(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)sqlite(.*)$ [NC,OR]
RewriteCond %{REQUEST_URI} ^(.*)msd(.*)$ [NC,OR]
